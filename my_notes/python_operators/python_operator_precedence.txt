                OPERATOR PRECEDENCE

This determines the order in which operators should be evaluated if there are multiple operators used in a statement or expression.
    So if I have an operator that has a higher precedence than a lower operator, that part of the expression will be evaluated first.

    3 + 4 * 2
In this expression, the multiplication has a higher precedent than the addition operator.


Operator precedence         Name
()                          Parenthesis     # Anything inside of the parenthesis is evaluated first.
**                          Exxponent (Power) (POW)
~x                          Bitwise NOT
*,  /,       //,     %      Multiplication, Division, Floor Division, Modulus
+ , -                       Addition, Subtraction
<<, >>,                     Bitwise shift operators
&                           Bitwise AND 
^                           Bitwise XOR 
|                           Bitwise OR
==,!=,>,>=,<,<=,is,is not,in, not in  Comparisions, Identity,Membership
not                         Logical NOT 
and                         Logical AND 
or                          Logical OR  


>>> 3 + 4
7
>>> 3 + 4 * 2
11
>>> (3 + 4) * 2
14
>>> 


            Associativity of Python Operators

This is the order in which an expression is evaluated that has multiple operator of the same precedence.

Almost all operators have left-right associativity.
    Associativity basically refers to the order in which an expression is evaluated that has multiple operators.

>>> 
>>> print(5 * 3 // 2)
7
>>> 

# Associativity can not be applied to Comparision and Assignment Operators in Python.
